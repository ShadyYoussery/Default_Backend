<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Default_Backend.Api</name>
    </assembly>
    <members>
        <member name="T:Default_Backend.Api.Controllers.Base.BaseController">
            <inheritdoc />
        </member>
        <member name="F:Default_Backend.Api.Controllers.Base.BaseController.TokenService">
            <summary>
            Token Business Property
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Base.BaseController.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Default_Backend.Api.Controllers.Base.BaseController.#ctor(Default_Backend.Service.Services.Base.ITokenService)">
            <inheritdoc />
        </member>
        <member name="T:Default_Backend.Api.Controllers.Common.FilesController">
            <summary>
            Files Controller
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Common.FilesController.#ctor(Default_Backend.Service.Services.File.IFileService,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Common.FilesController.DownloadWithAppCodeAsync(System.Guid,System.String)">
            <summary>
            Download File With App Code From  Token 
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Common.FilesController.GenerateTokenWithClaimsAsync(System.Collections.Generic.List{System.Guid},System.String)">
            <summary>
            Generate Token With App Code
            </summary>
            <param name="ids"></param>
            <param name="appCode"></param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Common.FilesController.UploadToSanStorageAsync(Microsoft.AspNetCore.Http.IFormFileCollection,Default_Backend.Entities.Enum.StorageType,System.Boolean,System.String)">
            <summary>
            Upload To San Storage
            </summary>
            <param name="files"></param>
            <param name="storageType"></param>
            <param name="isPublic"></param>
            <param name="appCode"></param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Common.FilesController.UploadBytesAsync(Default_Backend.Common.DTO.Common.File.UploadRequestDto)">
            <summary>
            Upload To Bytes
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Common.FilesController.GetDirectories(Default_Backend.Entities.Enum.StorageType)">
            <summary>
            List Current Path Directories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Common.FilesController.DeleteAsync(System.Guid)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Default_Backend.Api.Controllers.Identity.AccountsController">
            <summary>
            Accounts Controller
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.AccountsController.#ctor(Default_Backend.Service.Services.Identity.Login.IAccountService,Default_Backend.Service.Services.Base.ITokenService)">
            <inheritdoc />
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.AccountsController.Login(Default_Backend.Common.DTO.Identity.Login.LoginParameters)">
            <summary>
            Login 
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Default_Backend.Api.Controllers.Identity.PermissionsController">
            <summary>
            Permissions Controller
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.PermissionsController.#ctor(Default_Backend.Service.Services.Identity.Permission.IPermissionService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.PermissionsController.GetAsync(System.Int64)">
            <summary>
            Get By Id 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.PermissionsController.GetAllAsync">
            <summary>
            Get All 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.PermissionsController.GetPagedAsync(Default_Backend.Common.DTO.Base.BaseParam{Default_Backend.Common.DTO.Identity.Permission.Parameters.PermissionFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter responsible for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.PermissionsController.AddAsync(Default_Backend.Common.DTO.Identity.Permission.AddPermissionDto)">
            <summary>
            Add 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.PermissionsController.UpdateAsync(Default_Backend.Common.DTO.Identity.Permission.AddPermissionDto)">
            <summary>
            Update  
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.PermissionsController.DeleteAsync(System.Int64)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.PermissionsController.DeleteSoftAsync(System.Int64)">
            <summary>
            Soft Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Default_Backend.Api.Controllers.Identity.UsersController">
            <summary>
            Users Controller
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.UsersController.#ctor(Default_Backend.Service.Services.Identity.User.IUserService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.UsersController.GetAsync(System.Int64)">
            <summary>
            Get By Id 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.UsersController.GetAllAsync">
            <summary>
            Get All 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.UsersController.GetPagedAsync(Default_Backend.Common.DTO.Base.BaseParam{Default_Backend.Common.DTO.Identity.User.Parameters.UserFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter responsible for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.UsersController.AddAsync(Default_Backend.Common.DTO.Identity.User.AddUserDto)">
            <summary>
            Add 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.UsersController.UpdateAsync(Default_Backend.Common.DTO.Identity.User.AddUserDto)">
            <summary>
            Update  
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.UsersController.DeleteAsync(System.Int64)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Identity.UsersController.DeleteSoftAsync(System.Int64)">
            <summary>
            Soft Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Default_Backend.Api.Controllers.Lookup.LookupsController">
            <summary>
            Lookups Controller
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Lookup.LookupsController.#ctor(Default_Backend.Service.Services.Lookups.ILookupService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Lookup.LookupsController.GetStatusesAsync">
            <summary>
            Get All Statuses
            </summary>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Controllers.Lookup.LookupsController.GetActionsAsync">
            <summary>
            Get All Actions
            </summary>
            <returns></returns>
        </member>
        <member name="T:Default_Backend.Api.Extensions.ConfigureDependencyExtension">
            <summary>
            Dependency Extensions
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureDependencyExtension.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register Extensions
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureDependencyExtension.RegisterDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add DbContext
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureDependencyExtension.RegisterAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            register auto-mapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureDependencyExtension.RegisterRepository(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Custom Repositories
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureDependencyExtension.RegisterIntegrationRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            register Integration Repositories
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureDependencyExtension.RegisterCores(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Main Core
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Default_Backend.Api.Extensions.ConfigureMiddlewareExtension">
            <summary>
            Pipeline Extensions
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureMiddlewareExtension.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            General Configuration Method
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureMiddlewareExtension.ConfigureCors(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure Cors
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureMiddlewareExtension.CreateDatabase(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Create Database From Migration
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureMiddlewareExtension.SwaggerConfig(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            User Swagger
            </summary>
            <param name="app"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Default_Backend.Api.Extensions.ConfigureMiddlewareExtension.UseFluentScheduler(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            User Fluent Scheduler
            </summary>
            <param name="app"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:Default_Backend.Api.Program">
            <summary>
            Start Point
            </summary>
        </member>
        <member name="P:Default_Backend.Api.Program.Configuration">
            <summary>
            Configuration Properties
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Program.Main(System.String[])">
            <summary>
            Kick Off
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Default_Backend.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Web Host Builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Default_Backend.Api.Startup">
            <summary>
            Start Up Class
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Default_Backend.Api.Startup.Configuration">
            <summary>
            Public Configuration Property
            </summary>
        </member>
        <member name="M:Default_Backend.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure Dependencies
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Default_Backend.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure Pipeline
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
